# services/config_service.py

import os
import json
import logging

from aiogram import Bot, types

DEFAULT_LANGUAGE = "uk"

LANGUAGE_CODES = {
    "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ üá∫üá¶ (–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞)": "uk",
    "–†—É—Å—Å–∫–∏–π üá∑üá∫ (–†—É—Å—Å–∫–∏–π)": "ru",
    "ƒåe≈°tina üá®üáø (ƒåe≈°tina)": "cs",
    "English üá¨üáß (English)": "en",
    "MoldoveneascƒÉ üá≤üá© (MoldoveneascƒÉ)": "md",
    "Rom√¢nƒÉ üá∑üá¥ (Rom√¢nƒÉ)": "ro"
}

user_data = {}
user_languages = {}

def get_user_info(user_id, first_name, gender):
    if user_id not in user_data:
        polite_form = "–¥–æ—Ä–æ–≥–æ–π" if gender == "male" else "–¥–æ—Ä–æ–≥–∞—è"
        user_data[user_id] = {
            "name": first_name,
            "gender": gender,
            "polite": polite_form,
            "language": DEFAULT_LANGUAGE
        }
    return user_data[user_id]

def get_language(user_id):
    return user_data.get(user_id, {}).get("language", DEFAULT_LANGUAGE)

def load_config(language=DEFAULT_LANGUAGE):
    config_file = os.path.join("configs", f"config_{language}.json")
    if not os.path.exists(config_file):
        logging.error(f"–§–∞–π–ª {config_file} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
        language = DEFAULT_LANGUAGE
        config_file = os.path.join("configs", f"config_{language}.json")
    try:
        with open(config_file, "r", encoding="utf-8") as file:
            return json.load(file)
    except (FileNotFoundError, json.JSONDecodeError):
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ {config_file}.")
        return {}

async def set_bot_commands(bot: Bot):
    commands = [
        types.BotCommand(command="start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        types.BotCommand(command="language", description="–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫"),
        types.BotCommand(command="menu", description="–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∫–∞—Ñ–µ"),
        types.BotCommand(command="contacts", description="–ê–¥—Ä–µ—Å –∏ —Ç–µ–ª–µ—Ñ–æ–Ω"),
        types.BotCommand(command="website", description="–°–∞–π—Ç –∫–∞—Ñ–µ"),
        types.BotCommand(command="bots", description="–ü–æ–ª–µ–∑–Ω—ã–µ –±–æ—Ç—ã"),
        types.BotCommand(command="support", description="–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
    ]
    await bot.set_my_commands(commands)
