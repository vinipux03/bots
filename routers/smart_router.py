from aiogram import types
from rgbar import get_language, recommend_dish, menu_command
import asyncio

# üîç –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
ORDER_WORDS = [
    "–∑–∞–∫–∞–∑–∞—Ç—å", "—Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", "–æ—Ñ–æ—Ä–º–∏—Ç—å", "–¥–æ–±–∞–≤—å –≤ –∫–æ—Ä–∑–∏–Ω—É",
    "–æ–ø–ª–∞—Ç–∞", "—Ö–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å"
]

MENU_WORDS = [
    "–º–µ–Ω—é", "—á—Ç–æ –µ—Å—Ç—å", "–∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç", "–≤—ã–±–æ—Ä", "–±–ª—é–¥–∞",
    "—á—Ç–æ –º–æ–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å", "–ø–æ–∫–∞–∂–∏", "–≥–æ–ª–æ–¥–µ–Ω", "—É–∂–∏–Ω", "–∑–∞–≤—Ç—Ä–∞–∫", "–æ–±–µ–¥"
]

RECOMMEND_WORDS = [
    "–ø–æ—Å–æ–≤–µ—Ç—É–π", "—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—à—å", "—á—Ç–æ –≤–∫—É—Å–Ω–æ–µ", "–ø—Ä–µ–¥–ª–æ–∂–∏", "—É–¥–∏–≤–∏", "—á—Ç–æ –±—ã —Ç—ã –≤—ã–±—Ä–∞–ª–∞"
]

CATEGORY_WORDS = {
    "sushi": ["—Å—É—à–∏", "—Ä–æ–ª–ª—ã", "–º–∞–∫–∏"],
    "grill": ["–≥—Ä–∏–ª—å", "–º—è—Å–æ", "–±–∞—Ä–±–µ–∫—é", "—à–∞—à–ª—ã–∫", "—Å—Ç–µ–π–∫"],
    "sety": ["—Å–µ—Ç—ã", "—Å–µ—Ç", "–∫–æ–º–±–æ", "–Ω–∞ –¥–≤–æ–∏—Ö", "–Ω–∞ –∫–æ–º–ø–∞–Ω–∏—é"]
}

# üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π —Ä–æ—É—Ç–µ—Ä
async def smart_router(message: types.Message):
    text = message.text.lower()
    user_id = message.from_user.id
    language = get_language(user_id)

    if any(word in text for word in ORDER_WORDS):
        await message.answer("–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –æ—Ç–∫—Ä–æ–π –º–µ–Ω—é —á–µ—Ä–µ–∑ /menu –∏ –≤—ã–±–µ—Ä–∏ –±–ª—é–¥–æ. –Ø –ø–æ–º–æ–≥—É —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º!")
        return

    if any(word in text for word in MENU_WORDS):
        await menu_command(message)
        return

    for category, words in CATEGORY_WORDS.items():
        if any(word in text for word in words):
            recommendation = await recommend_dish(text, user_id, language)
            await message.answer(recommendation, parse_mode="HTML")
            return

    if any(word in text for word in RECOMMEND_WORDS):
        await message.answer("–°–µ–∫—É–Ω–¥–æ—á–∫—É, –ø–æ–¥–±–µ—Ä—É –¥–ª—è —Ç–µ–±—è —á—Ç–æ-—Ç–æ –≤–∫—É—Å–Ω–µ–Ω—å–∫–æ–µ... üç£")
        await asyncio.sleep(2)
        recommendation = await recommend_dish(text, user_id, language)
        await message.answer(recommendation, parse_mode="HTML")
